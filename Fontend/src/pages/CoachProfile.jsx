import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axiosInstance from '../../axiosInstance';
import '../assets/CSS/CoachProfile.css';
import Header from './Header';

function CoachProfile() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [coach, setCoach] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [tab, setTab] = useState('overview');

  console.log('CoachProfile - ID from params:', id);

  useEffect(() => {
    if (id) {
      console.log('Fetching coach profile for ID:', id);
      fetchCoachProfile();
    }
  }, [id]);

  const fetchCoachProfile = async () => {
    try {
      setLoading(true);
      setError('');
      
      // Check if user is authenticated
      const token = localStorage.getItem('token');
      console.log('Token exists:', !!token);
      console.log('Making API call to:', `/api/coach/${id}`);
      
      // Try different approach - get all coaches first and find the one we need
      try {
        const response = await axiosInstance.get(`/api/coach/${id}`);
        console.log('Direct API response:', response.data);

        if (response.data.status === 'success') {
          setCoach(response.data.data);
          console.log('Coach data set:', response.data.data);
        } else {
          setError('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin coach');
        }
      } catch (directError) {
        console.log('Direct call failed, trying getAllCoachProfiles');
        // Fallback: get all coaches and find the one we need
        const allCoachesResponse = await axiosInstance.get('/api/coach/getAllCoachProfiles');
        
        if (allCoachesResponse.data.status === 'success') {
          const coaches = allCoachesResponse.data.data;
          const targetCoach = coaches.find(coach => coach.userId.toString() === id.toString());
          
          if (targetCoach) {
            setCoach(targetCoach);
            console.log('Found coach in list:', targetCoach);
          } else {
            setError('Kh√¥ng t√¨m th·∫•y coach n√†y');
          }
        } else {
          throw new Error('Cannot fetch coaches list');
        }
      }
    } catch (error) {
      console.error('Error fetching coach profile:', error);
      console.log('Error response:', error.response);
      console.log('Error status:', error.response?.status);
      
      if (error.response?.status === 401) {
        setError('Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
        // Redirect to login after a delay
        setTimeout(() => {
          navigate('/login');
        }, 2000);
      } else if (error.response?.status === 404) {
        setError('Kh√¥ng t√¨m th·∫•y coach n√†y');
      } else {
        setError('L·ªói khi t·∫£i th√¥ng tin coach');
      }
    } finally {
      setLoading(false);
    }
  };

  const handleSelectCoach = () => {
    // Chuy·ªÉn ƒë·∫øn trang ti·∫øn tr√¨nh cai thu·ªëc
    navigate('/progress', { 
      state: { 
        selectedCoach: coach,
        coachId: coach.userId 
      } 
    });
  };

  if (loading) {
    return (
      <>
        <Header />
        <div className="coach-profile-bg">
          <div className="loading-container">
            <div className="loading-spinner"></div>
            <p>ƒêang t·∫£i th√¥ng tin coach...</p>
          </div>
        </div>
      </>
    );
  }

  if (error || !coach) {
    return (
      <>
        <Header />
        <div className="coach-profile-bg">
          <div className="error-container">
            <div className="error-message">
              <h3>üòî {error || 'Kh√¥ng t√¨m th·∫•y h·ªì s∆° coach'}</h3>
              <button className="coach-profile-btn-back" onClick={() => navigate(-1)}>
                <span style={{ fontSize: 20, marginRight: 8, verticalAlign: 'middle' }}>‚Üê</span>
                Quay l·∫°i danh s√°ch
              </button>
            </div>
          </div>
        </div>
      </>
    );
  }

  return (
    <>
      <Header />
      <div className="coach-profile-bg">
        <button className="coach-profile-btn-back" onClick={() => navigate(-1)}>
          <span style={{ fontSize: 20, marginRight: 8, verticalAlign: 'middle' }}>‚Üê</span>
          Quay l·∫°i danh s√°ch
        </button>
        <div className="coach-profile-container">
          <div className="coach-profile-header">
            <div className="coach-profile-avatar">
              {coach.fullName ? coach.fullName.charAt(0).toUpperCase() : 'C'}
            </div>
            <div style={{ flex: 1 }}>
              <div className="coach-profile-title">{coach.qualification || 'Coach'} {coach.fullName}</div>
              <div className="coach-profile-rating-row">
                <span className="coach-profile-rating">‚≠ê {coach.rating || 'N/A'} ({coach.reviews || 0} ƒë√°nh gi√°)</span>
                <span className="coach-profile-exp">{coach.yearsOfExperience || 'N/A'} nƒÉm kinh nghi·ªám</span>
                <span className="coach-profile-status online">C√≥ s·∫µn</span>
              </div>
              <div className="coach-profile-badges">
                {coach.specialization && (
                  <span>{coach.specialization}</span>
                )}
              </div>
              <div className="coach-profile-desc">{coach.bio || 'Chuy√™n gia t∆∞ v·∫•n cai thu·ªëc l√° v·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám'}</div>
              <div style={{marginTop: 10, color: '#fff', fontSize: 15}}>
                <b>Email:</b> {coach.email || 'N/A'} &nbsp;|&nbsp; <b>Username:</b> {coach.username || 'N/A'}
              </div>
            </div>
          </div>
          
          <div className="coach-profile-stats">
            <div className="coach-profile-stat">
              <div className="coach-profile-stat-value" style={{ color: '#16a34a' }}>{coach.rating || 4.5}</div>
              <div className="coach-profile-stat-label" style={{ color: '#16a34a' }}>ƒê√°nh gi√°</div>
            </div>
            <div className="coach-profile-stat blue">
              <div className="coach-profile-stat-value">{coach.yearsOfExperience || 'N/A'}</div>
              <div className="coach-profile-stat-label">NƒÉm KN</div>
            </div>
            <div className="coach-profile-stat purple">
              <div className="coach-profile-stat-value">&lt; 1h</div>
              <div className="coach-profile-stat-label">Ph·∫£n h·ªìi</div>
            </div>
            <div className="coach-profile-stat orange">
              <div className="coach-profile-stat-value">Vi·ªát Nam</div>
              <div className="coach-profile-stat-label">ƒê·ªãa ƒëi·ªÉm</div>
            </div>
          </div>

          {/* Action buttons */}
          <div className="coach-profile-actions">
            <button className="btn-select-coach" onClick={handleSelectCoach}>
              ‚úì Ch·ªçn Coach n√†y
            </button>
          </div>

          <div className="coach-profile-tabs">
            <button className={tab === 'overview' ? 'active' : ''} onClick={() => setTab('overview')}>T·ªïng quan</button>
            <button className={tab === 'method' ? 'active' : ''} onClick={() => setTab('method')}>Ph∆∞∆°ng ph√°p</button>
            <button className={tab === 'review' ? 'active' : ''} onClick={() => setTab('review')}>ƒê√°nh gi√°</button>
            <button className={tab === 'contact' ? 'active' : ''} onClick={() => setTab('contact')}>Li√™n h·ªá</button>
          </div>
          <div className="coach-profile-info">
            {tab === 'overview' && (
              <div className="coach-profile-info-flex">
                <div className="coach-profile-info-block">
                  <div className="coach-profile-info-block-title">Lƒ©nh v·ª±c chuy√™n m√¥n</div>
                  <div>
                    {coach.specialization ? (
                      <span className="coach-profile-specialty">{coach.specialization}</span>
                    ) : (
                      <span className="coach-profile-specialty">T∆∞ v·∫•n cai thu·ªëc l√°</span>
                    )}
                  </div>
                </div>
                <div className="coach-profile-info-block">
                  <div className="coach-profile-info-block-title">Th√¥ng tin coach</div>
                  <div><strong>Kinh nghi·ªám:</strong> {coach.yearsOfExperience || 'N/A'} nƒÉm</div>
                  <div style={{ marginTop: 8 }}>
                    <strong>ƒê√°nh gi√°:</strong> {coach.rating || 'N/A'}/5 ‚≠ê
                  </div>
                  <div style={{ marginTop: 8 }}>
                    <span style={{ color: '#0ea5e9', fontWeight: 600 }}>Ph·∫£n h·ªìi nhanh ch√≥ng v√† chuy√™n nghi·ªáp</span>
                  </div>
                </div>
              </div>
            )}
            {tab === 'method' && (
              <div style={{fontSize: 16, color: '#047857'}}>
                <b>Gi·ªõi thi·ªáu v·ªÅ coach:</b> <br/>
                {coach.bio || 'Coach chuy√™n nghi·ªáp v·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c t∆∞ v·∫•n cai thu·ªëc l√°. √Åp d·ª•ng c√°c ph∆∞∆°ng ph√°p khoa h·ªçc hi·ªán ƒë·∫°i ƒë·ªÉ gi√∫p kh√°ch h√†ng ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u cai thu·ªëc th√†nh c√¥ng.'}
              </div>
            )}
            {tab === 'review' && (
              <div style={{fontSize: 16}}>
                <b>ƒê√°nh gi√° t·ª´ kh√°ch h√†ng:</b>
                <ul style={{marginTop: 8}}>
                  <li>"Coach r·∫•t t·∫≠n t√¢m, nh·ªù c√≥ coach m√† t√¥i ƒë√£ b·ªè thu·ªëc th√†nh c√¥ng!"</li>
                  <li>"Ph·∫£n h·ªìi nhanh, t∆∞ v·∫•n r√µ r√†ng, d·ªÖ hi·ªÉu."</li>
                  <li>"Ph∆∞∆°ng ph√°p hi·ªáu qu·∫£, ph√π h·ª£p v·ªõi t·ª´ng ng∆∞·ªùi."</li>
                </ul>
              </div>
            )}
            {tab === 'contact' && (
              <div style={{fontSize: 16}}>
                <b>Li√™n h·ªá tr·ª±c ti·∫øp:</b>
                <div>Email: <a href={`mailto:${coach.email || ''}`}>{coach.email || 'N/A'}</a></div>
                <div>Username: {coach.username || 'N/A'}</div>
                <div style={{marginTop: 10, color: '#666'}}>
                  Sau khi ch·ªçn coach, b·∫°n c√≥ th·ªÉ nh·∫Øn tin tr·ª±c ti·∫øp trong trang ti·∫øn tr√¨nh cai thu·ªëc.
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
}

export default CoachProfile;

import React, { useEffect, useState } from 'react';
import '../assets/CSS/Home.css';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import axios from 'axios';

function Home() {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [blogs, setBlogs] = useState([]);
  const [loadingBlogs, setLoadingBlogs] = useState(false);

  // ‚úÖ ƒêi·ªÅu h∆∞·ªõng ADMIN / COACH
  useEffect(() => {
    if (!user) return;
    const scope = user.scope?.toUpperCase();
    const currentPath = window.location.pathname;

    if (scope === 'ADMIN' && (currentPath === '/' || currentPath === '/home')) {
      window.location.replace('/admin/dashboard');
    } else if (scope === 'COACH' && (currentPath === '/' || currentPath === '/home')) {
      window.location.replace('/coach');
    }
  }, [user]);

  // ‚úÖ G·ªçi API l·∫•y blog
  useEffect(() => {
    setLoadingBlogs(true);
    axios.get('/api/blog/getAllBlog')
      .then(res => {
        const data = res.data?.data || [];
        setBlogs(data);
      })
      .catch(err => {
        setBlogs([]);
      })
      .finally(() => setLoadingBlogs(false));
  }, []);

  // ‚úÖ Chuy·ªÉn h∆∞·ªõng khi click n√∫t c·∫ßn login
  const handleProtectedClick = (targetPath) => {
    if (user) navigate(targetPath);
    else navigate('/login');
  };

  // ‚úÖ X·ª≠ l√Ω ƒë·ªçc ti·∫øp
  const handleReadMore = (blog) => {
    const blogId = blog.id || blog._id;
    if (!user) {
      navigate('/login');
    } else if (blogId) {
      navigate(`/blog/${blogId}`);
    }
  };

  // ‚úÖ T·∫°m th·ªùi kh√¥ng l·ªçc theo ·∫£nh ƒë·ªÉ tr√°nh b·ªã lo·∫°i
  const validBlogs = blogs.filter(blog =>
    blog.title && blog.content // && (blog.coverImage || blog.image)
  );

  console.log('üì¶ Danh s√°ch blog t·ª´ API:', blogs);
  console.log('‚úÖ Blog h·ª£p l·ªá sau l·ªçc:', validBlogs);

  return (
    <div>
      {/* Hero section */}
      <div className="home-main-section">
        <img
          className="quit-smoking-anim"
          src="https://openmoji.org/data/color/svg/1F6AD.svg"
          alt="No Smoking Support"
        />
        <div className="main-left">
          <h1>B·∫Øt ƒë·∫ßu cu·ªôc s·ªëng kh√¥ng kh√≥i thu·ªëc ngay h√¥m nay</h1>
          <p>N·ªÅn t·∫£ng h·ªó tr·ª£ cai nghi·ªán thu·ªëc l√° hi·ªáu qu·∫£ v·ªõi c·ªông ƒë·ªìng h·ªó tr·ª£ v√† c√¥ng c·ª• theo d√µi ti·∫øn tr√¨nh c√° nh√¢n.</p>
          <div className="main-buttons">
            {!user && (
              <button className="green-btn" onClick={() => handleProtectedClick('/register')}>
                B·∫Øt ƒë·∫ßu ngay
              </button>
            )}
            <button className="white-btn" onClick={() => navigate('/about')}>
              T√¨m hi·ªÉu th√™m
            </button>
          </div>
        </div>
        <div className="main-right">
          <div className="box">
            <img src="/src/assets/img1/android-chrome-192x192.png" alt="T·ª± do kh√¥ng kh√≥i thu·ªëc" className="icon" />
            <h3>T·ª± do kh√¥ng kh√≥i thu·ªëc</h3>
            <p>H∆°n 10,000+ ng∆∞·ªùi ƒë√£ th√†nh c√¥ng cai nghi·ªán thu·ªëc l√° v·ªõi n·ªÅn t·∫£ng c·ªßa ch√∫ng t√¥i.</p>
          </div>
        </div>
      </div>

      {/* L√Ω do ch·ªçn */}
      <div className="why-nosmoke">
        <h2>T·∫°i sao n√™n ch·ªçn NoSmoke?</h2>
        <p>N·ªÅn t·∫£ng c·ªßa ch√∫ng t√¥i cung c·∫•p nh·ªØng c√¥ng c·ª• v√† h·ªó tr·ª£ thi·∫øt th·ª±c ƒë·ªÉ gi√∫p b·∫°n t·ª´ng b∆∞·ªõc cai nghi·ªán thu·ªëc l√° th√†nh c√¥ng.</p>
        <div className="features">
          {[
            { icon: 'progress.png', title: 'Theo d√µi ti·∫øn tr√¨nh', desc: 'Ghi l·∫°i v√† xem qu√° tr√¨nh cai nghi·ªán v·ªõi c√°c th·ªëng k√™ tr·ª±c quan.' },
            { icon: 'health.png', title: 'C·∫£i thi·ªán s·ª©c kh·ªèe', desc: 'Xem nh·ªØng l·ª£i √≠ch s·ª©c kh·ªèe v√† thay ƒë·ªïi t√≠ch c·ª±c sau khi b·ªè thu·ªëc.' },
            { icon: 'time.png', title: 'ƒê·∫øm th·ªùi gian th·ª±c', desc: 'Theo d√µi ch√≠nh x√°c th·ªùi gian b·∫°n ƒë√£ kh√¥ng h√∫t thu·ªëc v√† ƒë·∫°t ƒë∆∞·ª£c c√°c c·ªôt m·ªëc.' },
            { icon: 'save-money.png', title: 'Ti·∫øt ki·ªám chi ph√≠', desc: 'T√≠nh to√°n s·ªë ti·ªÅn b·∫°n ƒë√£ ti·∫øt ki·ªám ƒë∆∞·ª£c k·ªÉ t·ª´ khi b·ªè thu·ªëc.' },
          ].map(f => (
            <div className="feature-box" key={f.title}>
              <img src={`/src/assets/img/${f.icon}`} alt={f.title} />
              <h4>{f.title}</h4>
              <p>{f.desc}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Ranking */}
      <div className="ranking-section">
        <h2>B·∫£ng x·∫øp h·∫°ng th√†nh t√≠ch</h2>
        <p>H√£y xem nh·ªØng ng∆∞·ªùi xu·∫•t s·∫Øc trong vi·ªác cai thu·ªëc v√† s·ªë ng√†y kh√¥ng h√∫t thu·ªëc h·ªç ƒë√£ ƒë·∫°t ƒë∆∞·ª£c.</p>
        <div className="ranking-list">
          {[
            { name: 'Nguy·ªÖn VƒÉn A', days: 120, money: '2,400,000‚Ç´' },
            { name: 'Tr·∫ßn Th·ªã B', days: 95, money: '1,900,000‚Ç´' },
            { name: 'Ph·∫°m VƒÉn C', days: 70, money: '1,400,000‚Ç´' },
            { name: 'L√™ Th·ªã D', days: 60, money: '1,200,000‚Ç´' },
          ].map((user, i) => (
            <div className={`rank-card ${i === 0 ? 'top' : ''}`} key={user.name}>
              <div className="rank-avatar"></div>
              <h4>{user.name}</h4>
              <p>{user.days} ng√†y</p>
              <strong>{user.money}</strong>
            </div>
          ))}
        </div>
        <button className="white-btn" onClick={() => handleProtectedClick('/ranking')}>
          Xem b·∫£ng x·∫øp h·∫°ng ƒë·∫ßy ƒë·ªß
        </button>
      </div>

      {/* Blog section */}
      <div className="blog-section">
        <h2>Blog chia s·∫ª kinh nghi·ªám</h2>
        <p>C√πng l·∫Øng nghe nh·ªØng c√¢u chuy·ªán, l·ªùi khuy√™n ch√¢n th·ª±c t·ª´ c·ªông ƒë·ªìng v√† chuy√™n gia trong h√†nh tr√¨nh b·ªè thu·ªëc l√°.</p>
        <div className="blog-list" style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(3, 1fr)',
          gap: '24px',
          margin: '24px 0'
        }}>
          {loadingBlogs ? (
            <p>ƒêang t·∫£i...</p>
          ) : validBlogs.length > 0 ? (
            validBlogs.slice(0, 6).map(blog => (
              <div className="blog-card" key={blog.id || blog._id}>
                <img
                  src={blog.coverImage || blog.image || '/default-image.jpg'}
                  alt={blog.title || 'B√†i vi·∫øt'}
                />
                <h4>{blog.title || 'Kh√¥ng c√≥ ti√™u ƒë·ªÅ'}</h4>
                <p>{blog.content?.slice(0, 100) || 'Kh√¥ng c√≥ n·ªôi dung.'}</p>
                <span
                  style={{ color: '#2e7dff', cursor: 'pointer' }}
                  onClick={() => handleReadMore(blog)}
                >
                  ƒê·ªçc ti·∫øp ‚Üí
                </span>
              </div>
            ))
          ) : (
            <p>Kh√¥ng c√≥ b√†i vi·∫øt n√†o ph√π h·ª£p.</p>
          )}
        </div>
        <button className="white-btn" onClick={() => handleProtectedClick('/blog')}>
          Xem t·∫•t c·∫£ b√†i vi·∫øt
        </button>
      </div>
    </div>
  );
}

export default Home;

import React, { useState, useRef } from "react";
import "../assets/CSS/Profile.css";
import { useAuth } from '../contexts/AuthContext';
import { AiOutlineBell, AiOutlineMail, AiOutlineLock, AiOutlineSafety, AiOutlineUser, AiOutlinePhone, AiOutlineHome, AiOutlineCalendar, AiOutlineMan, AiOutlineIdcard, AiOutlineContacts, AiOutlineClose } from "react-icons/ai";

const ACHIEVEMENTS = [
  {
    title: "Ng√†y ƒë·∫ßu ti√™n",
    desc: "1 ng√†y kh√¥ng h√∫t thu·ªëc",
    date: "01/02/2024",
    achieved: true,
  },
  {
    title: "Tu·∫ßn ƒë·∫ßu ti√™n",
    desc: "7 ng√†y kh√¥ng h√∫t thu·ªëc",
    date: "08/02/2024",
    achieved: true,
  },
  {
    title: "Th√°ng ƒë·∫ßu ti√™n",
    desc: "30 ng√†y kh√¥ng h√∫t thu·ªëc",
    date: "02/03/2024",
    achieved: true,
  },
  {
    title: "Ti·∫øt ki·ªám 1 tri·ªáu",
    desc: "Ti·∫øt ki·ªám ƒë∆∞·ª£c 1,000,000 VNƒê",
    date: "15/03/2024",
    achieved: true,
  },
  {
    title: "3 th√°ng",
    desc: "90 ng√†y kh√¥ng h√∫t thu·ªëc",
    date: "",
    achieved: false,
  },
  {
    title: "6 th√°ng",
    desc: "180 ng√†y kh√¥ng h√∫t thu·ªëc",
    date: "",
    achieved: false,
  },
];

const userInit = {
  joinDate: "15/01/2024",
  smokeFreeDays: 45,
  smokeFreeSince: "01/02/2024",
  cigarettesAvoided: 900,
  moneySaved: 1800000,
  healthScore: 78,
  email: "nam.nguyen@email.com",
  phone: "0123 456 789",
  address: "123 Ph·ªë Hu·∫ø, Qu·∫≠n Hai B√† Tr∆∞ng, H√† N·ªôi",
  dob: "15/08/1985",
  gender: "Nam",
  job: "K·ªπ s∆∞ ph·∫ßn m·ªÅm",
  emergency: "Nguy·ªÖn Th·ªã Lan - 0987 654 321",
  smokeYears: 15,
  cigsPerDay: 20,
  quitAttempts: 3,
  quitReason: "S·ª©c kh·ªèe gia ƒë√¨nh",
  motivations: [
    "S·ª©c kh·ªèe b·∫£n th√¢n",
    "Gia ƒë√¨nh v√† con c√°i",
    "Ti·∫øt ki·ªám t√†i ch√≠nh",
    "C·∫£i thi·ªán th·ªÉ l·ª±c",
  ],
};

const HEALTH_BENEFITS = [
  {
    title: "C·∫£i thi·ªán tu·∫ßn ho√†n m√°u",
    desc: "Tu·∫ßn ho√†n m√°u ƒë∆∞·ª£c c·∫£i thi·ªán r√µ r·ªát sau khi ng·ª´ng h√∫t thu·ªëc.",
    time: "Sau 2-12 tu·∫ßn",
    status: "done",
  },
  {
    title: "Gi·∫£m nguy c∆° ƒëau tim",
    desc: "Nguy c∆° ƒëau tim gi·∫£m ƒë√°ng k·ªÉ sau 1 nƒÉm cai thu·ªëc.",
    time: "Sau 1 nƒÉm",
    status: "progress",
  },
  {
    title: "Gi·∫£m nguy c∆° ung th∆∞",
    desc: "Nguy c∆° m·∫Øc c√°c b·ªánh ung th∆∞ gi·∫£m m·∫°nh sau 5 nƒÉm.",
    time: "Sau 5 nƒÉm",
    status: "soon",
  },
  {
    title: "Ph·ªïi kh·ªèe nh∆∞ ng∆∞·ªùi kh√¥ng h√∫t",
    desc: "Ch·ª©c nƒÉng ph·ªïi ph·ª•c h·ªìi g·∫ßn nh∆∞ b√¨nh th∆∞·ªùng sau 10 nƒÉm.",
    time: "Sau 10 nƒÉm",
    status: "soon",
  },
];

const EXERCISES = [
  {
    title: "B√†i t·∫≠p h√≠t th·ªü s√¢u",
    desc: "Gi√∫p gi·∫£m c·∫£m gi√°c th√®m thu·ªëc v√† th∆∞ gi√£n tinh th·∫ßn.",
    link: "#",
  },
  {
    title: "T·∫≠p th·ªÉ d·ª•c nh·∫π",
    desc: "ƒêi b·ªô, yoga ho·∫∑c v·∫≠n ƒë·ªông nh·∫π gi√∫p gi·∫£m stress v√† tƒÉng s·ª©c kh·ªèe.",
    link: "#",
  },
  {
    title: "Thi·ªÅn v√† th∆∞ gi√£n",
    desc: "Thi·ªÅn gi√∫p ki·ªÉm so√°t c·∫£m x√∫c v√† gi·∫£m lo √¢u khi cai thu·ªëc.",
    link: "#",
  },
  {
    title: "U·ªëng n∆∞·ªõc v√† ƒÉn tr√°i c√¢y",
    desc: "Gi√∫p gi·∫£m c·∫£m gi√°c th√®m thu·ªëc v√† tƒÉng s·ª©c ƒë·ªÅ kh√°ng.",
    link: "#",
  },
];

const SETTINGS = {
  notifications: [
    { label: "Nh·∫Øc nh·ªü h√†ng ng√†y", checked: true, icon: <AiOutlineBell size={22} /> },
    { label: "Th√¥ng b√°o th√†nh t√≠ch", checked: true, icon: <AiOutlineMail size={22} /> },
    { label: "Email tu·∫ßn", checked: false, icon: <AiOutlineMail size={22} /> },
  ],
  security: [
    { label: "ƒê·ªïi m·∫≠t kh·∫©u", icon: <AiOutlineLock size={22} /> },
    { label: "X√°c th·ª±c 2 b∆∞·ªõc", icon: <AiOutlineSafety size={22} /> },
  ],
};

const Profile = () => {
  const { user: authUser } = useAuth();
  const [user, setUser] = useState(userInit);
  const [tab, setTab] = useState("overview");
  const [showEdit, setShowEdit] = useState(false);
  const [editForm, setEditForm] = useState(user);
  const modalRef = useRef();

  // L·∫•y t√™n hi·ªÉn th·ªã ∆∞u ti√™n theo th·ª© t·ª±: user.name (h·ªç t√™n Google/backend) > user.email > "Ng∆∞·ªùi d√πng"
  let displayName = "Ng∆∞·ªùi d√πng";
  if (authUser?.name && authUser.name.trim() !== "") {
    displayName = authUser.name;
  } else if (authUser?.email) {
    displayName = authUser.email;
  }

  const handleEditClick = () => {
    setEditForm({
      ...user,
      email: authUser?.email || user.email,
      gender: authUser?.gender || user.gender,
    });
    setShowEdit(true);
  };
  const handleEditChange = (e) => {
    setEditForm({ ...editForm, [e.target.name]: e.target.value });
  };
  const handleEditSave = (e) => {
    e.preventDefault();
    setUser(editForm);
    setShowEdit(false);
  };
  const handleEditCancel = () => setShowEdit(false);

  return (
    <div className="profile-bg">
      {showEdit && (
        <div className="modal-overlay" onClick={handleEditCancel}>
          <div className="modal-edit-profile modal-edit-profile-2col" onClick={e => e.stopPropagation()} ref={modalRef}>
            <div className="modal-edit-header">
              <AiOutlineUser size={26} style={{color:'#1976d2',marginRight:8}}/>
              <div>
                <div className="modal-edit-title">Ch·ªânh s·ª≠a th√¥ng tin c√° nh√¢n</div>
                <div className="modal-edit-desc">C·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n c·ªßa b·∫°n. Nh·∫•n l∆∞u ƒë·ªÉ thay ƒë·ªïi.</div>
              </div>
              <button className="modal-edit-close" onClick={handleEditCancel}><AiOutlineClose size={22}/></button>
            </div>
            <form className="edit-profile-form-2col" onSubmit={handleEditSave}>
              <div className="form-2col">
                <div className="form-row-2col">
                  <label><AiOutlineUser/> H·ªç v√† t√™n</label>
                  <input name="name" value={editForm.name} onChange={handleEditChange} required autoFocus />
                </div>
                <div className="form-row-2col">
                  <label><AiOutlineMail/> Email</label>
                  <input name="email" value={authUser?.email || editForm.email} readOnly tabIndex={-1} style={{background:'#f5f5f5', color:'#888'}} />
                </div>
                <div className="form-row-2col">
                  <label><AiOutlinePhone/> S·ªë ƒëi·ªán tho·∫°i</label>
                  <input name="phone" value={editForm.phone} onChange={handleEditChange} required />
                </div>
                <div className="form-row-2col">
                  <label><AiOutlineIdcard/> Ngh·ªÅ nghi·ªáp</label>
                  <input name="job" value={editForm.job} onChange={handleEditChange} />
                </div>
              </div>
              <div className="form-row-2col-full">
                <label><AiOutlineHome/> ƒê·ªãa ch·ªâ</label>
                <textarea name="address" value={editForm.address} onChange={handleEditChange} rows={2} />
              </div>
              <div className="form-2col">
                <div className="form-row-2col">
                  <label><AiOutlineCalendar/> Ng√†y sinh</label>
                  <input name="dob" value={editForm.dob} onChange={handleEditChange} type="date" />
                </div>
                <div className="form-row-2col">
                  <label><AiOutlineMan/> Gi·ªõi t√≠nh</label>
                  <input name="gender" value={authUser?.gender || editForm.gender} readOnly tabIndex={-1} style={{background:'#f5f5f5', color:'#888'}} />
                </div>
              </div>
              <div className="form-row-2col-full">
                <label><AiOutlineContacts/> Li√™n h·ªá kh·∫©n c·∫•p</label>
                <input name="emergency" value={editForm.emergency} onChange={handleEditChange} />
              </div>
              <div className="modal-actions-2col">
                <button type="button" className="cancel-btn-2col" onClick={handleEditCancel}>H·ªßy</button>
                <button type="submit" className="save-btn-2col">L∆∞u thay ƒë·ªïi</button>
              </div>
            </form>
          </div>
        </div>
      )}
      <div className="profile-main-card">
        <div className="profile-header-row">
          <div>
            <h1>{displayName}</h1>
            <div className="profile-join">Th√†nh vi√™n t·ª´ {user.joinDate}</div>
          </div>
          <button className="profile-edit-btn" onClick={handleEditClick}>
            <span className="icon-edit" /> Ch·ªânh s·ª≠a
          </button>
        </div>
        <div className="profile-badges-row">
          <span className="badge-green">‚úî  {user.smokeFreeDays} ng√†y kh√¥ng h√∫t thu·ªëc</span>
          <span className="badge-blue">‚Üó  ƒêi·ªÉm s·ª©c kh·ªèe: {user.healthScore}/100</span>
        </div>
        <div className="profile-stats-row">
          <div className="stat-card">
            <div className="stat-icon stat-blue">üìÖ</div>
            <div className="stat-title">Ng√†y kh√¥ng h√∫t</div>
            <div className="stat-value">{user.smokeFreeDays}</div>
            <div className="stat-desc">K·ªÉ t·ª´ {user.smokeFreeSince}</div>
          </div>
          <div className="stat-card">
            <div className="stat-icon stat-red">üö≠</div>
            <div className="stat-title">ƒêi·∫øu thu·ªëc tr√°nh</div>
            <div className="stat-value">{user.cigarettesAvoided}</div>
            <div className="stat-desc">ƒêi·∫øu thu·ªëc l√°</div>
          </div>
          <div className="stat-card">
            <div className="stat-icon stat-green">üíµ</div>
            <div className="stat-title">Ti·ªÅn ti·∫øt ki·ªám</div>
            <div className="stat-value stat-money">{user.moneySaved.toLocaleString()}ƒë</div>
            <div className="stat-desc">S·ªë ti·ªÅn ƒë√£ ti·∫øt ki·ªám</div>
          </div>
          <div className="stat-card">
            <div className="stat-icon stat-pink">‚ù§Ô∏è</div>
            <div className="stat-title">ƒêi·ªÉm s·ª©c kh·ªèe</div>
            <div className="stat-value stat-health">{user.healthScore}/100</div>
            <div className="stat-bar">
              <div className="stat-bar-inner" style={{width: user.healthScore + '%'}}></div>
            </div>
          </div>
        </div>
        <div className="profile-tabs-row">
          <button className={tab==="overview" ? "tab-btn active" : "tab-btn"} onClick={()=>setTab("overview")}>T·ªïng quan</button>
          <button className={tab==="achievements" ? "tab-btn active" : "tab-btn"} onClick={()=>setTab("achievements")}>Th√†nh t√≠ch</button>
          <button className={tab==="health" ? "tab-btn active" : "tab-btn"} onClick={()=>setTab("health")}>S·ª©c kh·ªèe</button>
          <button className={tab==="settings" ? "tab-btn active" : "tab-btn"} onClick={()=>setTab("settings")}>C√†i ƒë·∫∑t</button>
        </div>
        {tab === "overview" && (
          <div className="profile-content-row">
            <div className="profile-info-card">
              <div className="profile-info-title">Th√¥ng tin c√° nh√¢n</div>
              <div className="profile-info-list">
                <div><span className="icon-mail"/> <b>Email:</b> {user.email}</div>
                <div><span className="icon-phone"/> <b>ƒêi·ªán tho·∫°i:</b> {user.phone}</div>
                <div><span className="icon-home"/> <b>ƒê·ªãa ch·ªâ:</b> {user.address}</div>
                <div><span className="icon-birth"/> <b>Ng√†y sinh:</b> {user.dob}</div>
                <div><span className="icon-gender"/> <b>Gi·ªõi t√≠nh:</b> {user.gender}</div>
                <div><span className="icon-job"/> <b>Ngh·ªÅ nghi·ªáp:</b> {user.job}</div>
                <div><span className="icon-emergency"/> <b>Li√™n h·ªá kh·∫©n c·∫•p:</b> {user.emergency}</div>
              </div>
            </div>
            <div className="profile-info-card">
              <div className="profile-info-title">L·ªãch s·ª≠ h√∫t thu·ªëc</div>
              <div className="profile-info-list">
                <div><b>S·ªë nƒÉm h√∫t thu·ªëc:</b> {user.smokeYears} nƒÉm</div>
                <div><b>ƒêi·∫øu/ng√†y (tr∆∞·ªõc ƒë√¢y):</b> {user.cigsPerDay} ƒëi·∫øu</div>
                <div><b>L·∫ßn cai tr∆∞·ªõc:</b> {user.quitAttempts} l·∫ßn</div>
                <div><b>L√Ω do cai l·∫ßn n√†y:</b> {user.quitReason}</div>
                <div><b>ƒê·ªông l·ª±c cai thu·ªëc:</b> {user.motivations.map((m,i)=>(<span key={i} className="motivation-tag">{m}</span>))}</div>
              </div>
            </div>
          </div>
        )}
        {tab === "achievements" && (
          <div className="profile-achievements-card">
            <div className="profile-info-title" style={{marginBottom: 4}}>
              <span style={{fontSize:'1.2em',marginRight:6}}>üë§</span> Huy hi·ªáu & Th√†nh t√≠ch
            </div>
            <div className="profile-achievements-desc">Nh·ªØng m·ªëc quan tr·ªçng b·∫°n ƒë√£ ƒë·∫°t ƒë∆∞·ª£c trong h√†nh tr√¨nh cai thu·ªëc l√°</div>
            <div className="achievements-grid">
              {ACHIEVEMENTS.map((a, idx) => (
                <div key={idx} className={a.achieved ? "achievement-box achieved" : "achievement-box"}>
                  <div className="achievement-title">{a.title} {a.achieved && <span className="achievement-badge">üèÖ</span>}</div>
                  <div className="achievement-desc">{a.desc}</div>
                  {a.achieved && a.date && <div className="achievement-date">ƒê·∫°t ƒë∆∞·ª£c: {a.date}</div>}
                </div>
              ))}
            </div>
          </div>
        )}
        {tab === "health" && (
          <div className="profile-health-card">
            <div className="profile-info-title" style={{marginBottom: 4}}>
              <span style={{fontSize:'1.2em',marginRight:6}}>‚Üó</span> C·∫£i thi·ªán s·ª©c kh·ªèe
            </div>
            <div className="profile-achievements-desc">Theo d√µi nh·ªØng c·∫£i thi·ªán v·ªÅ s·ª©c kh·ªèe khi b·∫°n ng·ª´ng h√∫t thu·ªëc</div>
            <div className="health-benefits-list">
              {HEALTH_BENEFITS.map((item, idx) => (
                <div key={idx} className="health-benefit-row">
                  <span className={
                    item.status === 'done' ? 'dot dot-green' :
                    item.status === 'progress' ? 'dot dot-yellow' :
                    'dot dot-gray'
                  }></span>
                  <div className="health-benefit-content">
                    <div className="health-benefit-title">{item.title}</div>
                    <div className="health-benefit-desc">{item.desc}</div>
                  </div>
                  <div className="health-benefit-time">{item.time}</div>
                  <div className="health-benefit-status">
                    {item.status === 'done' && <span className="status-done">Ho√†n th√†nh</span>}
                    {item.status === 'progress' && <span className="status-progress">ƒêang ti·∫øn h√†nh</span>}
                    {item.status === 'soon' && <span className="status-soon">S·∫Øp t·ªõi</span>}
                  </div>
                </div>
              ))}
            </div>
            <div className="profile-info-title" style={{marginTop:32, marginBottom:8}}>
              <span style={{fontSize:'1.2em',marginRight:6}}>üèÉ‚Äç‚ôÇÔ∏è</span> C√°c b√†i t·∫≠p gi·∫£m h√∫t thu·ªëc
            </div>
            <div className="exercises-list">
              {EXERCISES.map((ex, idx) => (
                <div key={idx} className="exercise-box">
                  <div className="exercise-title">{ex.title}</div>
                  <div className="exercise-desc">{ex.desc}</div>
                  <button className="exercise-btn" onClick={()=>window.open(ex.link, '_blank')}>Xem chi ti·∫øt</button>
                </div>
              ))}
            </div>
          </div>
        )}
        {tab === "settings" && (
          <div className="profile-settings-row">
            <div className="profile-settings-card">
              <div className="profile-info-title"><AiOutlineBell style={{marginRight:6}}/> Th√¥ng b√°o</div>
              <div className="settings-list">
                {SETTINGS.notifications.map((n, idx) => (
                  <div key={idx} className="settings-row settings-row-noti">
                    <div className="settings-row-left">
                      {n.icon}
                      <span>{n.label}</span>
                    </div>
                    <input type="checkbox" checked={n.checked} readOnly />
                  </div>
                ))}
              </div>
            </div>
            <div className="profile-settings-card">
              <div className="profile-info-title"><AiOutlineLock style={{marginRight:6}}/> B·∫£o m·∫≠t</div>
              <div className="settings-list">
                {SETTINGS.security.map((s, idx) => (
                  <div key={idx} className="settings-row settings-row-sec">
                    <div className="settings-row-left">
                      {s.icon}
                      <span>{s.label}</span>
                    </div>
                    <AiOutlineLock size={20} style={{color:'#888'}} />
                  </div>
                ))}
                {/* ƒê√£ b·ªè n√∫t ƒëƒÉng xu·∫•t theo y√™u c·∫ßu */}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Profile;
